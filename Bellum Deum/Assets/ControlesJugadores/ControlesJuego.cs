//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/ControlesJugadores/ControlesJuego.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlesJuego: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlesJuego()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlesJuego"",
    ""maps"": [
        {
            ""name"": ""J1"",
            ""id"": ""1191b243-b890-4185-bf24-e7febdf2a854"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""479e6513-e160-4494-8ccc-a3b0b4d8040b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GuardarCarta"",
                    ""type"": ""Button"",
                    ""id"": ""c2c8fb38-d672-4f38-a218-fcd34a5f4206"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JugarCarta"",
                    ""type"": ""Button"",
                    ""id"": ""e930b6e8-4868-441d-86f4-6ecb24e30ad3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""1b2af591-2c77-4536-8a4f-21aa9db90a65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoRight"",
                    ""type"": ""Button"",
                    ""id"": ""829fcb86-da74-420e-83bb-1b645007035c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoLeft"",
                    ""type"": ""Button"",
                    ""id"": ""f0646764-ddd7-406a-b6d2-65d323f70c0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""ff527021-f211-4c02-933e-5976594c46ed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""74214943-c580-44e4-98eb-ad7eebe17902"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8607c725-d935-4808-84b1-8354e29bab63"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e52207f4-ea14-473d-9b87-bccbedffd96c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GuardarCarta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d68d8b7a-0273-4996-a49a-0b63ec2c37a9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JugarCarta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbdf8ff3-0452-4a11-be98-e75bcb629ec7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ed9a66a-a114-4565-8d3e-a2f35806bb55"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""280f0b0a-4004-44c3-82ed-90968d5a1265"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""J2"",
            ""id"": ""d8921ff5-2257-4452-96c5-12a8fede0e68"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f1ad369f-67e1-4fcf-94a6-256ed63de17a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GuardarCarta"",
                    ""type"": ""Button"",
                    ""id"": ""81dbc07b-8b26-4c51-80a5-87c0277d14a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JugarCarta"",
                    ""type"": ""Button"",
                    ""id"": ""8dad740c-3058-4f77-92f9-b662f8e7bee0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""51a78b7d-dcdf-40a5-9c76-4c3fb2ff74c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoRight"",
                    ""type"": ""Button"",
                    ""id"": ""1105294a-51b7-4381-a6f4-00ad447956da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoLeft"",
                    ""type"": ""Button"",
                    ""id"": ""117b3185-73ba-40c2-9e2e-7f650ed5428a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""6cd081c8-db54-4bb2-8a34-2af3648173fa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e18af90-0b17-44d2-b0e3-b50727c30d01"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9f7614eb-c73b-4842-b4ec-358f84725ab6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2b9032c9-b470-41cc-aa67-0bd85f7cb134"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9ee9a8c-809b-4ca2-870a-0ed4ef729c21"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JugarCarta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2254d9f-ec47-4ea1-a282-c3287496f115"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GuardarCarta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a693838e-0b27-49f3-adf2-a477128d4449"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c4ca585-8a4e-44b4-85ca-5aa46201cd4b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""48811053-53d1-4634-b5b2-1bbdaae11f02"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b87c6b6a-b62d-4e4d-a3fd-d6f77c8cb487"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""c8b484df-20bf-43f3-895b-06c01f84cdab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""1b829af9-d957-4dab-a4cd-d968ded3a56d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""f7fcc051-db71-44d2-8891-dd407e03776a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4c4a5009-3ee1-49d3-b984-080e147eb1ab"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a87be09a-787d-475b-a0dc-664bd8f101d1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""386f883d-88a1-479e-a2b4-5a94ea6aec72"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8a235a18-705b-4b5b-ac7e-31815e79a835"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e9be703b-f7e2-4234-a3e0-91042c97fb17"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""60bf6b81-eeac-4d01-92d3-3e6a2df3155e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dddf622d-eb83-4ee2-8f1a-63748e70cfbb"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c294cf65-2e73-4010-8bb2-99a337fc0ef0"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d2b31164-557a-4295-8aa5-9dc4bfc7760c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9707f83-caa3-45c8-ac28-2d2cd40f6f5e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // J1
        m_J1 = asset.FindActionMap("J1", throwIfNotFound: true);
        m_J1_Navigate = m_J1.FindAction("Navigate", throwIfNotFound: true);
        m_J1_GuardarCarta = m_J1.FindAction("GuardarCarta", throwIfNotFound: true);
        m_J1_JugarCarta = m_J1.FindAction("JugarCarta", throwIfNotFound: true);
        m_J1_Escape = m_J1.FindAction("Escape", throwIfNotFound: true);
        m_J1_GoRight = m_J1.FindAction("GoRight", throwIfNotFound: true);
        m_J1_GoLeft = m_J1.FindAction("GoLeft", throwIfNotFound: true);
        // J2
        m_J2 = asset.FindActionMap("J2", throwIfNotFound: true);
        m_J2_Navigate = m_J2.FindAction("Navigate", throwIfNotFound: true);
        m_J2_GuardarCarta = m_J2.FindAction("GuardarCarta", throwIfNotFound: true);
        m_J2_JugarCarta = m_J2.FindAction("JugarCarta", throwIfNotFound: true);
        m_J2_Escape = m_J2.FindAction("Escape", throwIfNotFound: true);
        m_J2_GoRight = m_J2.FindAction("GoRight", throwIfNotFound: true);
        m_J2_GoLeft = m_J2.FindAction("GoLeft", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Escape = m_UI.FindAction("Escape", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // J1
    private readonly InputActionMap m_J1;
    private List<IJ1Actions> m_J1ActionsCallbackInterfaces = new List<IJ1Actions>();
    private readonly InputAction m_J1_Navigate;
    private readonly InputAction m_J1_GuardarCarta;
    private readonly InputAction m_J1_JugarCarta;
    private readonly InputAction m_J1_Escape;
    private readonly InputAction m_J1_GoRight;
    private readonly InputAction m_J1_GoLeft;
    public struct J1Actions
    {
        private @ControlesJuego m_Wrapper;
        public J1Actions(@ControlesJuego wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_J1_Navigate;
        public InputAction @GuardarCarta => m_Wrapper.m_J1_GuardarCarta;
        public InputAction @JugarCarta => m_Wrapper.m_J1_JugarCarta;
        public InputAction @Escape => m_Wrapper.m_J1_Escape;
        public InputAction @GoRight => m_Wrapper.m_J1_GoRight;
        public InputAction @GoLeft => m_Wrapper.m_J1_GoLeft;
        public InputActionMap Get() { return m_Wrapper.m_J1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(J1Actions set) { return set.Get(); }
        public void AddCallbacks(IJ1Actions instance)
        {
            if (instance == null || m_Wrapper.m_J1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_J1ActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @GuardarCarta.started += instance.OnGuardarCarta;
            @GuardarCarta.performed += instance.OnGuardarCarta;
            @GuardarCarta.canceled += instance.OnGuardarCarta;
            @JugarCarta.started += instance.OnJugarCarta;
            @JugarCarta.performed += instance.OnJugarCarta;
            @JugarCarta.canceled += instance.OnJugarCarta;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
            @GoRight.started += instance.OnGoRight;
            @GoRight.performed += instance.OnGoRight;
            @GoRight.canceled += instance.OnGoRight;
            @GoLeft.started += instance.OnGoLeft;
            @GoLeft.performed += instance.OnGoLeft;
            @GoLeft.canceled += instance.OnGoLeft;
        }

        private void UnregisterCallbacks(IJ1Actions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @GuardarCarta.started -= instance.OnGuardarCarta;
            @GuardarCarta.performed -= instance.OnGuardarCarta;
            @GuardarCarta.canceled -= instance.OnGuardarCarta;
            @JugarCarta.started -= instance.OnJugarCarta;
            @JugarCarta.performed -= instance.OnJugarCarta;
            @JugarCarta.canceled -= instance.OnJugarCarta;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
            @GoRight.started -= instance.OnGoRight;
            @GoRight.performed -= instance.OnGoRight;
            @GoRight.canceled -= instance.OnGoRight;
            @GoLeft.started -= instance.OnGoLeft;
            @GoLeft.performed -= instance.OnGoLeft;
            @GoLeft.canceled -= instance.OnGoLeft;
        }

        public void RemoveCallbacks(IJ1Actions instance)
        {
            if (m_Wrapper.m_J1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IJ1Actions instance)
        {
            foreach (var item in m_Wrapper.m_J1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_J1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public J1Actions @J1 => new J1Actions(this);

    // J2
    private readonly InputActionMap m_J2;
    private List<IJ2Actions> m_J2ActionsCallbackInterfaces = new List<IJ2Actions>();
    private readonly InputAction m_J2_Navigate;
    private readonly InputAction m_J2_GuardarCarta;
    private readonly InputAction m_J2_JugarCarta;
    private readonly InputAction m_J2_Escape;
    private readonly InputAction m_J2_GoRight;
    private readonly InputAction m_J2_GoLeft;
    public struct J2Actions
    {
        private @ControlesJuego m_Wrapper;
        public J2Actions(@ControlesJuego wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_J2_Navigate;
        public InputAction @GuardarCarta => m_Wrapper.m_J2_GuardarCarta;
        public InputAction @JugarCarta => m_Wrapper.m_J2_JugarCarta;
        public InputAction @Escape => m_Wrapper.m_J2_Escape;
        public InputAction @GoRight => m_Wrapper.m_J2_GoRight;
        public InputAction @GoLeft => m_Wrapper.m_J2_GoLeft;
        public InputActionMap Get() { return m_Wrapper.m_J2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(J2Actions set) { return set.Get(); }
        public void AddCallbacks(IJ2Actions instance)
        {
            if (instance == null || m_Wrapper.m_J2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_J2ActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @GuardarCarta.started += instance.OnGuardarCarta;
            @GuardarCarta.performed += instance.OnGuardarCarta;
            @GuardarCarta.canceled += instance.OnGuardarCarta;
            @JugarCarta.started += instance.OnJugarCarta;
            @JugarCarta.performed += instance.OnJugarCarta;
            @JugarCarta.canceled += instance.OnJugarCarta;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
            @GoRight.started += instance.OnGoRight;
            @GoRight.performed += instance.OnGoRight;
            @GoRight.canceled += instance.OnGoRight;
            @GoLeft.started += instance.OnGoLeft;
            @GoLeft.performed += instance.OnGoLeft;
            @GoLeft.canceled += instance.OnGoLeft;
        }

        private void UnregisterCallbacks(IJ2Actions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @GuardarCarta.started -= instance.OnGuardarCarta;
            @GuardarCarta.performed -= instance.OnGuardarCarta;
            @GuardarCarta.canceled -= instance.OnGuardarCarta;
            @JugarCarta.started -= instance.OnJugarCarta;
            @JugarCarta.performed -= instance.OnJugarCarta;
            @JugarCarta.canceled -= instance.OnJugarCarta;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
            @GoRight.started -= instance.OnGoRight;
            @GoRight.performed -= instance.OnGoRight;
            @GoRight.canceled -= instance.OnGoRight;
            @GoLeft.started -= instance.OnGoLeft;
            @GoLeft.performed -= instance.OnGoLeft;
            @GoLeft.canceled -= instance.OnGoLeft;
        }

        public void RemoveCallbacks(IJ2Actions instance)
        {
            if (m_Wrapper.m_J2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IJ2Actions instance)
        {
            foreach (var item in m_Wrapper.m_J2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_J2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public J2Actions @J2 => new J2Actions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Escape;
    public struct UIActions
    {
        private @ControlesJuego m_Wrapper;
        public UIActions(@ControlesJuego wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Escape => m_Wrapper.m_UI_Escape;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IJ1Actions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnGuardarCarta(InputAction.CallbackContext context);
        void OnJugarCarta(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnGoRight(InputAction.CallbackContext context);
        void OnGoLeft(InputAction.CallbackContext context);
    }
    public interface IJ2Actions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnGuardarCarta(InputAction.CallbackContext context);
        void OnJugarCarta(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnGoRight(InputAction.CallbackContext context);
        void OnGoLeft(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
    }
}
